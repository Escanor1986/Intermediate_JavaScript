var m=Object.defineProperty;var h=(l,r,e)=>r in l?m(l,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[r]=e;var i=(l,r,e)=>h(l,typeof r!="symbol"?r+"":r,e);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))t(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&t(a)}).observe(document,{childList:!0,subtree:!0});function e(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function t(o){if(o.ep)return;o.ep=!0;const s=e(o);fetch(o.href,s)}})();class d{constructor(r){i(this,"color");this.color=r}}const n=class n{constructor(r=10,e=8){i(this,"width");i(this,"height");i(this,"board");i(this,"players");i(this,"currPlayer");i(this,"isGameOver");this.width=r,this.height=e,this.board=[],this.players=[],this.currPlayer=null,this.isGameOver=!1}makeGameCount(){const r=document.getElementById("numberOfGames"),e=document.getElementById("numberOfWins"),t=document.getElementById("numberOfLosses");r.innerText=`Number of Games : ${n.numberOfGames}`,e.innerText=`Number of wins : ${n.numberOfWins}`,t.innerText=`Number of losses : ${n.numberOfLosses}`}makeBoard(){this.board=[];for(let r=0;r<this.height;r++){const e=Array.from({length:this.width},()=>null);this.board.push(e)}}makeHtmlBoard(){const r=document.getElementById("game"),e=document.createElement("table");e.setAttribute("id","board"),r.append(e);const t=document.createElement("tr");t.setAttribute("id","column-top");for(let o=0;o<this.width;o++){const s=document.createElement("td");s.setAttribute("id",`top-${o}`),s.addEventListener("click",this.handleClick.bind(this)),t.append(s)}e.append(t);for(let o=0;o<this.height;o++){const s=document.createElement("tr");for(let a=0;a<this.width;a++){const c=document.createElement("td");c.setAttribute("id",`c-${o}-${a}`),s.append(c)}e.append(s)}}findSpotForCol(r){for(let e=this.height-1;e>=0;e--)if(this.board[e][r]===null)return e;return null}placeInTable(r,e){const t=document.createElement("div");t.classList.add("piece"),t.style.backgroundColor=this.currPlayer.color,document.getElementById(`c-${r}-${e}`).append(t)}endGame(r){alert(r),this.isGameOver=!0,this.makeGameCount()}checkForWin(){const r=e=>e.every(([t,o])=>t>=0&&t<this.height&&o>=0&&o<this.width&&this.board[t][o]===this.currPlayer);for(let e=0;e<this.height;e++)for(let t=0;t<this.width;t++){const o=[[e,t],[e,t+1],[e,t+2],[e,t+3]],s=[[e,t],[e+1,t],[e+2,t],[e+3,t]],a=[[e,t],[e+1,t+1],[e+2,t+2],[e+3,t+3]],c=[[e,t],[e+1,t-1],[e+2,t-2],[e+3,t-3]];if(r(o)||r(s)||r(a)||r(c))return n.numberOfWins+=1,!0}return!1}handleClick(r){if(this.isGameOver)return;const e=Number(r.target.id.slice(4)),t=this.findSpotForCol(e);if(t!==null){if(this.board[t][e]=this.currPlayer,this.placeInTable(t,e),this.checkForWin())return this.endGame(`Player ${this.currPlayer.color} won! Would you like to stop or restart a new game?`);if(this.board[0].every(o=>o!==null))return this.endGame("Tie! Would you like to stop or restart a new game?");this.currPlayer=this.currPlayer===this.players[0]?this.players[1]:this.players[0]}}makeButtonBoard(){const r=document.getElementById("game"),e=document.createElement("div");e.setAttribute("id","buttonBoard"),e.style.display="flex",e.style.flexDirection="row",e.style.justifyContent="center",e.style.alignItems="center",r.append(e),this.makeStartButton(e)}makeStartButton(r){const e=document.createElement("button");e.setAttribute("id","startButton"),e.innerText="Start Game",e.type="button",e.addEventListener("click",t=>{t.stopPropagation(),t.preventDefault();const o=document.getElementById("player1Color").value,s=document.getElementById("player2Color").value;if(this.board.length===0)this.players=[new d(o),new d(s)],this.currPlayer=this.players[0],this.makeBoard(),this.makeHtmlBoard(),e.style.display="none",this.makeRestartButton(),n.numberOfGames+=1,this.makeGameCount();else throw new Error("Oups ! Seems you're already playing !")}),r.append(e)}makeRestartButton(){const r=document.getElementById("buttonBoard"),e=document.createElement("button");e.setAttribute("id","restartButton"),e.innerText="Restart Game",e.type="button",e.addEventListener("click",t=>{t.stopPropagation(),t.preventDefault();const o=document.getElementById("board");if(o)o.remove(),n.numberOfGames+=1,this.isGameOver||(n.numberOfLosses+=1),this.makeBoard(),this.makeHtmlBoard(),this.makeGameCount(),this.isGameOver=!1;else throw new Error("Oups ! Seems to have a problem... Check out your browser !")}),r.append(e)}start(){this.makeButtonBoard(),this.makeGameCount()}};i(n,"numberOfWins",0),i(n,"numberOfGames",0),i(n,"numberOfLosses",0);let u=n;const p=new u;p.start();
