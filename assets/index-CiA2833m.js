var h=Object.defineProperty;var p=(c,r,e)=>r in c?h(c,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[r]=e;var i=(c,r,e)=>p(c,typeof r!="symbol"?r+"":r,e);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))t(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&t(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function t(s){if(s.ep)return;s.ep=!0;const o=e(s);fetch(s.href,o)}})();class d{constructor(r,e){i(this,"color");i(this,"isAI");this.color=r,this.isAI=e}}const a=class a{constructor(r=10,e=8){i(this,"width");i(this,"height");i(this,"board");i(this,"players");i(this,"currPlayer");i(this,"isGameOver");this.width=r,this.height=e,this.board=[],this.players=[],this.currPlayer=null,this.isGameOver=!1}makeGameCount(){const r=document.getElementById("numberOfGames"),e=document.getElementById("numberOfWins"),t=document.getElementById("numberOfLosses");r.innerText=`Number of Games : ${a.numberOfGames}`,e.innerText=`Number of wins : ${a.numberOfWins}`,t.innerText=`Number of losses : ${a.numberOfLosses}`}makeBoard(){this.board=[];for(let r=0;r<this.height;r++){const e=Array.from({length:this.width},()=>null);this.board.push(e)}}makeHtmlBoard(){const r=document.getElementById("game"),e=document.createElement("table");e.setAttribute("id","board"),r.append(e);const t=document.createElement("tr");t.setAttribute("id","column-top");for(let s=0;s<this.width;s++){const o=document.createElement("td");o.setAttribute("id",`top-${s}`),o.addEventListener("click",this.handleClick.bind(this)),t.append(o)}e.append(t);for(let s=0;s<this.height;s++){const o=document.createElement("tr");for(let n=0;n<this.width;n++){const l=document.createElement("td");l.setAttribute("id",`c-${s}-${n}`),o.append(l)}e.append(o)}}findSpotForCol(r){for(let e=this.height-1;e>=0;e--)if(this.board[e][r]===null)return e;return null}placeInTable(r,e){const t=document.createElement("div");t.classList.add("piece"),t.style.backgroundColor=this.currPlayer.color,document.getElementById(`c-${r}-${e}`).append(t)}endGame(r){alert(r),this.isGameOver=!0,this.makeGameCount()}checkForWin(){const r=e=>e.every(([t,s])=>t>=0&&t<this.height&&s>=0&&s<this.width&&this.board[t][s]===this.currPlayer);for(let e=0;e<this.height;e++)for(let t=0;t<this.width;t++){const s=[[e,t],[e,t+1],[e,t+2],[e,t+3]],o=[[e,t],[e+1,t],[e+2,t],[e+3,t]],n=[[e,t],[e+1,t+1],[e+2,t+2],[e+3,t+3]],l=[[e,t],[e+1,t-1],[e+2,t-2],[e+3,t-3]];if(r(s)||r(o)||r(n)||r(l))return a.numberOfWins+=1,!0}return!1}handleClick(r){if(!this.isGameOver)if(this.currPlayer===this.players[0]&&this.currPlayer.isAI===!1){const e=Number(r.target.id.slice(4));console.log("x = ",e);const t=this.findSpotForCol(e);if(console.log("y = ",t),t===null)return;if(this.board[t][e]=this.currPlayer.color,console.log(this.board),this.placeInTable(t,e),this.checkForWin())return this.endGame(`Player ${this.currPlayer.color} won! Would you like to stop or restart a new game?`);if(this.board[0].every(s=>s!==null))return this.endGame("Tie! Would you like to stop or restart a new game?");this.currPlayer=this.players[1],this.currPlayer===this.players[1]&&this.currPlayer.isAI===!0&&setTimeout(()=>{console.log(this.xAxesBestMoveAI),this.board[this.xAxesBestMoveAI[1]][this.xAxesBestMoveAI[0]]=this.currPlayer.color,this.placeInTable(this.xAxesBestMoveAI[1],this.xAxesBestMoveAI[0])},500)}else this.currPlayer=this.players[0]}get xAxesBestMoveAI(){let r=0,e=[0,0],t=0;return this.board.forEach((s,o)=>{let n=0;s.forEach((l,m)=>{l!==null&&typeof l=="string"&&l===this.currPlayer.color?(n+=1,n>t&&(t=n,r=o,e=[o,m])):n=0})}),console.log(`Best row: ${r}, Best move: ${e}, Max row length: ${t}`),e}makeButtonBoard(){const r=document.getElementById("game"),e=document.createElement("div");e.setAttribute("id","buttonBoard"),e.style.display="flex",e.style.flexDirection="row",e.style.justifyContent="center",e.style.alignItems="center",r.append(e),this.makeStartButton(e)}makeStartButton(r){const e=document.createElement("button");e.setAttribute("id","startButton"),e.innerText="Start Game",e.type="button",e.addEventListener("click",t=>{t.stopPropagation(),t.preventDefault();const s=document.getElementById("player1Color").value,o=document.getElementById("player2Color").value,n=document.getElementById("player2AI").checked;if(console.log(n),this.board.length===0)this.players=[new d(s,!1),new d(o,n)],this.currPlayer=this.players[0],this.makeBoard(),this.makeHtmlBoard(),e.style.display="none",this.makeRestartButton(),a.numberOfGames+=1,this.makeGameCount();else throw new Error("Oups ! Seems you're already playing !")}),r.append(e)}makeRestartButton(){const r=document.getElementById("buttonBoard"),e=document.createElement("button");e.setAttribute("id","restartButton"),e.innerText="Restart Game",e.type="button",e.addEventListener("click",t=>{t.stopPropagation(),t.preventDefault();const s=document.getElementById("board");if(s)s.remove(),a.numberOfGames+=1,this.isGameOver||(a.numberOfLosses+=1),this.makeBoard(),this.makeHtmlBoard(),this.makeGameCount(),this.isGameOver=!1;else throw new Error("Oups ! Seems to have a problem... Check out your browser !")}),r.append(e)}start(){this.makeButtonBoard(),this.makeGameCount()}};i(a,"numberOfWins",0),i(a,"numberOfGames",0),i(a,"numberOfLosses",0);let u=a;const y=new u;y.start();
